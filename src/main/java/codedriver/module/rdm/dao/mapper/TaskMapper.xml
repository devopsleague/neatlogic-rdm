<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.module.rdm.dao.mapper.TaskMapper">

    <resultMap id="taskInfo" type="codedriver.module.rdm.dto.TaskVo">
        <id property="uuid" column="uuid"/>
        <result property="name" column="name"/>
        <result property="projectUuid" column="projectUuid"/>
        <result property="projectName" column="projectName"/>
        <result property="processAreaUuid" column="processAreaUuid"/>
        <result property="processAreaName" column="processAreaName"/>
        <result property="iterationUuid" column="iterationUuid"/>
        <result property="iterationName" column="iterationName"/>
        <result property="processAreaUuid" column="processAreaUuid"/>
        <result property="processAreaName" column="processAreaName"/>
        <result property="statusUuid" column="statusUuid"/>
        <result property="statusName" column="statusName"/>
        <result property="parentUuid" column="parentUuid"/>
        <result property="priorityUuid" column="priorityUuid"/>
        <result property="priorityName" column="priorityName"/>
        <result property="priorityColor" column="priorityColor"/>
        <result property="categoryUuid" column="categoryUuid"/>
        <result property="categoryName" column="categoryName"/>
        <result property="startTime" column="startTime"/>
        <result property="endTime" column="endTime"/>
        <result property="description" column="description"/>
        <collection property="taskFieldList" ofType="codedriver.module.rdm.dto.FieldVo">
            <id property="uuid" column="uuid"/>
            <result property="field" column="field"/>
            <result property="type" column="fieldType"/>
            <result property="name" column="fieldName"/>
            <result property="value" column="fieldValue"/>
        </collection>

        <collection property="associatedTaskList" ofType="codedriver.module.rdm.dto.TaskAssociateVo">
            <id property="targetTaskUuid" column="targetTaskUuid"/>
            <result property="type" column="associateType"/>
        </collection>

        <collection property="processAccountIdList" ofType="java.lang.String">
            <result column="processAccount" />
        </collection>
    </resultMap>

    <select id="getTaskByUuid" resultMap="taskInfo">
        SELECT
            rt.name,
            rt.uuid,
            rt.`project_uuid` AS projectUuid,
            rp.`name` AS projectName,
            rt.`iteration_uuid` AS iterationUuid,
            rpi.`name` AS iterationName,
            rt.`process_area_uuid` AS processAreaUuid,
            rpa.name AS  processAreaName,
            rt.`status_uuid` AS statusUuid,
            rps.name AS statusName,
            rt.`parent_uuid` AS parentUuid,

            rt.`priority_uuid` AS priorityUuid,
            rpp.`name` AS priorityName,
            rpp.`color` AS priorityColor,
            rt.`category_uuid` AS categoryUuid,
            rc.`name` AS categoryName,
            DATE_FORMAT(rt.start_time, '%Y-%m-%d %H:%i:%s') AS startTime,
            DATE_FORMAT(rt.end_time, '%Y-%m-%d %H:%i:%s') AS endTime,
            rtd.description,

            rtf.`field` ,
            rtf.`field_type` AS fieldType,
            rtf.`field_name` AS fieldName,
            rtf.`field_uuid` AS fieldUuid,
            rtf.`field_value` AS fieldValue,

            rtpa.`user_id` AS processAccount,

            rta.`file_uuid` AS fileUuid,
            f.`name` AS fileName,

            rtas.`task_uuid` AS taskUuid,
            rtas.`target_task_uuid` AS targetTaskUuid,
            rtas.`type` AS associateType,

            DATE_FORMAT(rt.create_time, '%Y-%m-%d %H:%i:%s') AS createTime,
            rt.`create_user` AS createUser,
            DATE_FORMAT(rt.update_time, '%Y-%m-%d %H:%i:%s') AS updateTime,
            rt.`update_user` AS updateUser

        FROM `rdm_task` rt
        LEFT JOIN `rdm_project` rp ON rt.`project_uuid` = rp.`uuid`
        LEFT JOIN `rdm_project_iteration` rpi ON rt.`iteration_uuid` = rpi.`uuid`
        LEFT JOIN `rdm_process_area` rpa ON rt.`process_area_uuid` = rpa.`uuid`
        LEFT JOIN `rdm_project_status` rps ON rt.`status_uuid` = rps.uuid
        LEFT JOIN `rdm_project_priority` rpp ON rt.`priority_uuid` = rpp.`uuid`
        LEFT JOIN `rdm_category` rc ON rt.`category_uuid` = rc.`uuid`
        LEFT JOIN `rdm_task_description` rtd ON rt.`uuid` = rtd.`task_uuid`
        LEFT JOIN `rdm_task_field`  rtf ON rt.uuid = rtf.`task_uuid`
        LEFT JOIN `rdm_task_process_account` rtpa ON rt.`uuid` = rtpa.`task_uuid`
        LEFT JOIN `rdm_task_file` rta ON rt.`uuid` = rta.`task_uuid`
        LEFT JOIN `file` f ON rta.`file_uuid` = f.`uuid`
        LEFT JOIN `rdm_task_associated` rtas ON rt.`uuid` = rtas.`task_uuid`
        WHERE rt.uuid = #{uuid}
    </select>

    <select id="getTaskAssociationCount" resultType="int">
        SELECT
        COUNT(1)
        FROM
          `rdm_task_associated`
        WHERE `task_uuid` = #{taskUuid}
        AND `target_task_process_area_uuid` = #{targetTaskProcessAreaUuid}
    </select>

    <select id="getTaskIterationCount" resultType="string">
        SELECT iteration_uuid FROM rdm_task WHERE   `uuid` = #{uuid}
    </select>

    <insert id="insertTask" parameterType="codedriver.module.rdm.dto.TaskVo">
        INSERT INTO `rdm_task` (
          `name`,
          `uuid`,
          `project_uuid`,
          `iteration_uuid`,
          `process_area_uuid`,
          `status_uuid`,
          `parent_uuid`,
          `priority_uuid`,
          `category_uuid`,
          `start_time`,
          `end_time`,
          `create_user`,
          `create_time`
        )
        VALUES
          (
            #{name},
            #{uuid},
            #{projectUuid},
            #{iterationUuid},
            #{processAreaUuid},
            #{statusUuid},
            #{parentUuid},
            #{priorityUuid},
            #{categoryUuid},
            #{startTime},
            #{endTime},
            #{createUser},
            NOW()
          )
    </insert>

    <insert id="insertTaskProcessAccount">
        INSERT INTO `rdm_task_process_account` (
            `task_uuid`,
            `user_id`
         )
         VALUES
         (
          #{taskUuid},
          #{userId}
         )
    </insert>

    <insert id="insertTaskField">
        INSERT INTO `rdm_task_field` (
          `task_uuid`,
          `field`,
          `field_name`,
          `field_uuid`,
          `field_type`,
          `field_value`
        )
        VALUES
          (
            #{taskUuid},
            #{field},
            #{name},
            #{uuid},
            #{type},
            #{value}
          )
    </insert>

    <insert id="insertTaskDescription">
        INSERT INTO `rdm_task_description` (
            `task_uuid`,
            `description`
        )
        VALUES
          (
            #{taskUuid},
            #{description}
          )
    </insert>

    <insert id="replaceAssociate" parameterType="codedriver.module.rdm.dto.TaskAssociateVo">
        REPLACE INTO `rdm_task_associated` (
            `task_uuid`,
            `target_task_uuid`,
            `type`
        )
        VALUES
          (
            #{taskUuid},
            #{targetTaskUuid},
            #{type}
          )
    </insert>

    <insert id="insertTaskComment" parameterType="codedriver.module.rdm.dto.TaskCommentVo">
        INSERT INTO `rdm_task_comment` (
            `task_uuid`,
            `comment`,
            `create_time`,
            `create_user`
        )
        VALUES
          (
            #{taskUuid},
            #{comment},
            NOW(),
            #{createUser}
          )
    </insert>

    <update id="updateTaskComment" parameterType="codedriver.module.rdm.dto.TaskCommentVo">
        UPDATE  `rdm_task_comment`
        SET
            `comment` = #{comment},
            `update_time` = NOW(),
            `update_user` = #{updateUser}
        WHERE task_uuid = #{taskUuid}
    </update>

    <delete id="deleteAssociate">
        DELETE FROM `rdm_task_associated`
        WHERE `task_uuid` = #{taskUuid}
        AND `target_task_uuid`=#{targetTaskUuid}
    </delete>

    <delete id="deleteComment">
        DELETE FROM `rdm_task_comment` WHERE id = #{value}
    </delete>

    <insert id="insertTaskFile" parameterType="codedriver.module.rdm.dto.TaskFileVo">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID() as id
        </selectKey>
        INSERT INTO `rdm_task_file` (
        `task_uuid`,
        `file_uuid`,
        `create_user`,
        `create_time`
        ) VALUES (
        #{taskUuid},
        #{fileUuid},
        #{createUser},
        NOW()
        )
    </insert>

    <delete id="deleteTaskFile" parameterType="codedriver.module.rdm.dto.TaskFileVo">
        DELETE FROM `rdm_task_file`
        <where>
            <if test="taskUuid != null and taskUuid != ''">
                AND `task_uuid` = #{taskUuid}
            </if>
            <if test="fileUuid != null and fileUuid != ''">
                AND `file_uuid` = #{fileUuid}
            </if>
        </where>
    </delete>
</mapper>
